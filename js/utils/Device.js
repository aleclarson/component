// Generated by CoffeeScript 1.12.4
var Device, Dimensions, Type, inArray, isCurrentDevice, registerDevices, type;

Dimensions = require("Dimensions");

inArray = require("in-array");

Type = require("Type");

type = Type("Device");

type.defineGetters({
  size: function() {
    var size;
    size = Dimensions.get("window");
    return {
      width: size.width,
      height: size.height
    };
  },
  width: function() {
    return Dimensions.get("window").width;
  },
  height: function() {
    return Dimensions.get("window").height;
  },
  scale: function() {
    return Dimensions.get("window").scale;
  }
});

type.defineMethods({
  specific: function(obj) {
    var value;
    value = obj[this.name];
    return value != null ? value : obj["else"];
  },
  round: function(value) {
    var scale;
    scale = this.scale;
    return Math.round(value * scale) / scale;
  }
});

module.exports = Device = type.construct();

isCurrentDevice = function(a, b) {
  return inArray(a, b.width) && inArray(a, b.height);
};

registerDevices = function(devices) {
  var name, size;
  for (name in devices) {
    size = devices[name];
    if (Device[name] = isCurrentDevice(size, Device.size)) {
      Device.name = name;
    }
  }
};

registerDevices({
  iPad: [768, 1024],
  iPhone4: [320, 480],
  iPhone5: [320, 568],
  iPhone6: [375, 667],
  iPhone6P: [414, 736]
});
