// Generated by CoffeeScript 1.12.4
var Builder, ElementType, ReactComponent, Type, assertType, type;

ReactComponent = require("react/lib/ReactComponent");

assertType = require("assertType");

Builder = require("Builder");

Type = require("Type");

ElementType = require("../utils/ElementType");

type = Type("modx_Component");

type.inherits(Builder);

type.trace();

type.defineStatics({
  Mixin: require("./Mixin")
});

type.defineGetters({
  _delegate: function() {
    return this;
  }
});

type.definePrototype({
  _defaultKind: ReactComponent
});

type.overrideMethods({
  inherits: function(kind) {
    if (kind.componentType) {
      kind = kind.componentType;
    }
    return this.__super(arguments);
  },
  build: function() {
    var componentType, elementType;
    componentType = this.__super(arguments);
    elementType = ElementType(componentType);
    this._statics.apply(elementType);
    return elementType;
  }
});

type.defineMethods({
  _defaultCreator: (function() {
    var createInstance;
    createInstance = Builder.prototype._rootCreator;
    return function() {
      var instance;
      instance = createInstance();
      ReactComponent.apply(instance, arguments);
      return instance;
    };
  })()
});

type.addMixins([require("./StyleMixin"), require("./PropsMixin"), require("./LifecycleMixin"), require("./AnimatedMixin"), require("./ReactionMixin"), require("./ListenerMixin"), require("./GatedRenderMixin")]);

module.exports = type.build();
