// Generated by CoffeeScript 1.12.4
var AnimatedValue, NativeComponent, React, Style, Text, steal, type;

AnimatedValue = require("Animated").AnimatedValue;

Style = require("react-validators").Style;

React = require("react");

steal = require("steal");

Text = require("Text");

NativeComponent = require("../NativeComponent");

type = NativeComponent("TextView");

type.render(function(props) {
  return React.createElement(Text, props, this.text);
});

type.defineProps({
  text: String.isRequired,
  style: Style,
  onPress: Function,
  onLayout: Function,
  numberOfLines: Number,
  allowFontScaling: Boolean,
  suppressHighlighting: Boolean,
  testID: String
});

type.defineValues(function() {
  return {
    _text: steal(this.props, "text")
  };
});

type.defineListeners(function() {
  if (this._text instanceof AnimatedValue) {
    return this._text.didSet((function(_this) {
      return function() {
        return _this.forceUpdate();
      };
    })(this));
  }
});

type.defineGetters({
  text: function() {
    var text;
    if (text = this._text) {
      if (text instanceof AnimatedValue) {
        return text.get();
      } else {
        return text;
      }
    } else {
      return null;
    }
  }
});

module.exports = type.build();
