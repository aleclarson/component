// Generated by CoffeeScript 1.11.1
var NativeComponent, OneOf, React, Style, TextInput, steal, sync, type;

Style = require("react-validators").Style;

TextInput = require("TextInput");

React = require("react");

OneOf = require("OneOf");

steal = require("steal");

sync = require("sync");

NativeComponent = require("../NativeComponent");

type = NativeComponent("TextInput");

type.render(function(props) {
  return React.createElement(TextInput, props);
});

type.defineProps({
  value: String,
  defaultValue: String,
  style: Style,
  autoCapitalize: OneOf(["characters", "words", "sentences", "none"]),
  autoCorrect: Boolean,
  autoFocus: Boolean,
  blurOnSubmit: Boolean,
  editable: Boolean,
  maxLength: Number,
  maxLineCount: Number,
  multiline: Boolean,
  onBlur: Function,
  onChange: Function,
  onContentSizeChange: Function,
  onEndEditing: Function,
  onFocus: Function,
  onLayout: Function,
  onSelectionChange: Function,
  onSubmitEditing: Function,
  placeholder: String,
  placeholderTextColor: String,
  secureTextEntry: Boolean,
  selectTextOnFocus: Boolean,
  selectionColor: String
});

type.defineMethods((function() {
  var keys;
  keys = ["focus", "blur"];
  return sync.reduce(keys, {}, function(methods, key) {
    methods[key] = function() {
      return this._child[key].apply(this._child, arguments);
    };
    return methods;
  });
})());

module.exports = type.build();
